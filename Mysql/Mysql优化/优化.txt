Mysql数据库优化总结
一、数据库设计
	适当建立索引
	使用索引一般要遵守的规则:
		a) 索引的字段必须是经常作为查询条件的字段;
		b) 如果索引多个字段，第一个字段要是经常作为查询条件的。如果只有第二个字段作为查询条件，这个索引不会起到作用;
		c) 索引的字段必须有足够的区分度;
		d) Mysql 对于长字段支持前缀索引;

	对表进行水平划分
	对表进行垂直划分

	读写[写: update/delete/add]分离

	选择适当的字段类型，特别是主键
		a)选择字段的一般原则是保小不保大，能用占用字节小的字段就不用大字段。
		b)datetime和timestamp，datetime占用8个字节，而timestamp占用4 个字节，只用了一半

	文件、图片等大文件用文件系统存储，不用数据库

	外键表示清楚，方便建立索引

	掌握表的写入时机

	选择合适的引擎

二、SQL语句优化
	Sql语句优化工具
		慢日志
		如果发现系统慢了，又说不清楚是哪里慢，那么就该用这个工具了。只需要为mysql配置参数，mysql会自己记录下来慢的sql语句。配置很简单，参数文件里配置：
　　    slow_query_log=d:/slow.txt
		long_query_time = 2
　　	就可以在d:/slow.txt里找到执行时间超过2秒的语句了，根据这个文件定位问题吧。

	Explain()

	show status
	定位慢查询

	1.尽量少 join
	2.尽量少排序
	3.尽量避免 select *
	4.尽量用 join 代替子查询
	5.尽量少 or
　　当 where 子句中存在多个条件以“或”并存的时候，MySQL 的优化器并没有很好的解决其执行计划优化问题，再加上 MySQL 特有的 SQL 与 Storage 分层架构方式，造成了其性能比较低下，很多时候使用 union all 或者是union(必要的时候)的方式来代替“or”会得到更好的效果。
	6.尽量用 union all 代替 union
　　union 和 union all 的差异主要是前者需要将两个(或者多个)结果集合并后再进行唯一性过滤操作，这就会涉及到排序，增加大量的 CPU 运算，加大资源消耗及延迟。所以当我们可以确认不可能出现重复结果集或者不在乎重复结果集的时候，尽量使用 union all 而不是 union。
	7.尽量早过滤
	8.避免类型转换
	9.优先优化高并发的 SQL，而不是执行频率低某些“大”SQL
	10.从全局出发优化，而不是片面调整
	11.尽可能对每一条运行在数据库中的SQL进行 explain

三、数据库参数配置
	对mysql配置优化 [配置最大并发数my.ini, 调整缓存大小 ]

四、合理的硬件资源和操作系统
	mysql服务器硬件升级
	如果你的机器内存超过4G，那么毋庸置疑应当采用64位操作系统和64位mysql
	读写分离

	如果数据库压力很大，一台机器支撑不了，那么可以用mysql复制实现多台机器同步，将数据	库的压力分散。　　