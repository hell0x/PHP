1.绝不要信任外部数据输入
2.禁用那些使安全性难以实施的PHP设置
	尽量禁用register_globals
3.攻击防治
	sql注入:
		转移函数addslashes(), mysql_real_escape_string()等
		正则验证
		is_numeric(),intval()对数字进行过滤
		str_replace()对特定字符过滤
		绑定变量，使用预编译语句
	缓冲区溢出攻击:
		缓冲区溢出攻击 试图使 PHP 应用程序中（或者更精确地说，在 Apache 或底层操作系统中）的内存分配缓冲区发生溢出。请记住，您可能是使用 PHP 这样的高级语言来编写 Web 应用程序，但是最终还是要调用 C（在 Apache 的情况下）。与大多数低级语言一样，C 对于内存分配有严格的规则缓冲区溢出攻击向缓冲区发送大量数据，使部分数据溢出到相邻的内存缓冲区，从而破坏缓冲区或者重写逻辑。这样就能够造成拒绝服务、破坏数据或者在远程服务器上执行恶意代码。 
		防止缓冲区溢出攻击的惟一方法是检查所有用户输入的长度
		strlen()   substr
		字符串的字符超过特定数量（比如 128 或 255）时，才删除十六进制串。
	在跨站点脚本（XSS）攻击:
		strip_tags()
	$_SERVER['HTTP_REFERER']
	要创建随机的令牌，可以使用 PHP 内置的 md5()、uniqid() 和 rand() 函数
	csrf攻击(跨站点请求伪造)